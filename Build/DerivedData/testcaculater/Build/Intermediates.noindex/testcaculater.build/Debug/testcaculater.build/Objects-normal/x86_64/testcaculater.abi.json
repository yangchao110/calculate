{
  "kind": "Root",
  "name": "TopLevel",
  "printedName": "TopLevel",
  "children": [
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "testcaculater"
    },
    {
      "kind": "Import",
      "name": "SwiftOnoneSupport",
      "printedName": "SwiftOnoneSupport",
      "declKind": "Import",
      "moduleName": "testcaculater"
    },
    {
      "kind": "Import",
      "name": "_Concurrency",
      "printedName": "_Concurrency",
      "declKind": "Import",
      "moduleName": "testcaculater"
    },
    {
      "kind": "TypeDecl",
      "name": "Solution",
      "printedName": "Solution",
      "children": [
        {
          "kind": "Function",
          "name": "insertsort",
          "printedName": "insertsort()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)insertsort",
          "mangledName": "$s13testcaculater8SolutionC10insertsortyyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "lengthOfLongestSubstring",
          "printedName": "lengthOfLongestSubstring(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)lengthOfLongestSubstring:",
          "mangledName": "$s13testcaculater8SolutionC24lengthOfLongestSubstringySiSSF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "longestPalindrome",
          "printedName": "longestPalindrome(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)longestPalindrome:",
          "mangledName": "$s13testcaculater8SolutionC17longestPalindromeyS2SF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "longestPalindrome2",
          "printedName": "longestPalindrome2(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)longestPalindrome2:",
          "mangledName": "$s13testcaculater8SolutionC18longestPalindrome2yS2SF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isvalid",
          "printedName": "isvalid(arr:left:right:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Character]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC7isvalid3arr4left5rightSbSaySJG_S2itF",
          "mangledName": "$s13testcaculater8SolutionC7isvalid3arr4left5rightSbSaySJG_S2itF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "findMedianSortedArrays",
          "printedName": "findMedianSortedArrays(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)findMedianSortedArrays::",
          "mangledName": "$s13testcaculater8SolutionC22findMedianSortedArraysySdSaySiG_AEtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "findMedianSortedArrays2",
          "printedName": "findMedianSortedArrays2(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Double",
              "printedName": "Swift.Double",
              "usr": "s:Sd"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)findMedianSortedArrays2::",
          "mangledName": "$s13testcaculater8SolutionC23findMedianSortedArrays2ySdSaySiG_AEtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "zsort",
          "printedName": "zsort(s:row:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)zsortWithS:row:",
          "mangledName": "$s13testcaculater8SolutionC5zsort1s3rowS2S_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverse1",
          "printedName": "reverse1(x:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)reverse1WithX:",
          "mangledName": "$s13testcaculater8SolutionC8reverse11xS2i_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "stringToInt",
          "printedName": "stringToInt(s:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)stringToIntWithS:",
          "mangledName": "$s13testcaculater8SolutionC11stringToInt1sSiSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "ispalindrome",
          "printedName": "ispalindrome(x:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)ispalindromeWithX:",
          "mangledName": "$s13testcaculater8SolutionC12ispalindrome1xSbSi_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxarea",
          "printedName": "maxarea(x:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)maxareaWithX:",
          "mangledName": "$s13testcaculater8SolutionC7maxarea1xSiSaySiG_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "inttoroman",
          "printedName": "inttoroman(num:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)inttoromanWithNum:",
          "mangledName": "$s13testcaculater8SolutionC10inttoroman3numSSSi_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "inttoroman2",
          "printedName": "inttoroman2(num:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)inttoroman2WithNum:",
          "mangledName": "$s13testcaculater8SolutionC11inttoroman23numSSSi_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "inttoroman3",
          "printedName": "inttoroman3(s:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)inttoroman3WithS:",
          "mangledName": "$s13testcaculater8SolutionC11inttoroman31sSiSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "longestCommonPrefix",
          "printedName": "longestCommonPrefix(ss:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)longestCommonPrefixWithSs:",
          "mangledName": "$s13testcaculater8SolutionC19longestCommonPrefix2ssSSSaySSG_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "Merge5",
          "printedName": "Merge5(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC6Merge5yAA8ListNodeCSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC6Merge5yAA8ListNodeCSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "threesum",
          "printedName": "threesum(nums:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)threesumWithNums:",
          "mangledName": "$s13testcaculater8SolutionC8threesum4numsSaySaySiGGAF_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "threesumclosest",
          "printedName": "threesumclosest(nums:target:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)threesumclosestWithNums:target:",
          "mangledName": "$s13testcaculater8SolutionC15threesumclosest4nums6targetSiSaySiG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "letterCombinations",
          "printedName": "letterCombinations(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)letterCombinations:",
          "mangledName": "$s13testcaculater8SolutionC18letterCombinationsySaySSGSSF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "getcombinations",
          "printedName": "getcombinations(a:b:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)getcombinationsWithA:b:",
          "mangledName": "$s13testcaculater8SolutionC15getcombinations1a1bSaySSGAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "letterCombinations1",
          "printedName": "letterCombinations1(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)letterCombinations1:",
          "mangledName": "$s13testcaculater8SolutionC19letterCombinations1ySaySSGSSF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "dfs",
          "printedName": "dfs(path:map:digits:dept:res:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "paramValueOwnership": "InOut",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[Swift.String : Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                },
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:SD"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC3dfs4path3map6digits4dept3resySSz_SDyS2SGSSSiSaySSGztF",
          "mangledName": "$s13testcaculater8SolutionC3dfs4path3map6digits4dept3resySSz_SDyS2SGSSSiSaySSGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "fourSum",
          "printedName": "fourSum(nums:target:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)fourSumWithNums:target:",
          "mangledName": "$s13testcaculater8SolutionC7fourSum4nums6targetSaySaySiGGAG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeNthFromEnd",
          "printedName": "removeNthFromEnd(head:n:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC16removeNthFromEnd4head1nAA8ListNodeCSgAH_SitF",
          "mangledName": "$s13testcaculater8SolutionC16removeNthFromEnd4head1nAA8ListNodeCSgAH_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isvalid",
          "printedName": "isvalid(s:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)isvalidWithS:",
          "mangledName": "$s13testcaculater8SolutionC7isvalid1sSbSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "testmerge",
          "printedName": "testmerge()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)testmerge",
          "mangledName": "$s13testcaculater8SolutionC9testmergeyyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "mergetowlists",
          "printedName": "mergetowlists(list1:list2:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13mergetowlists5list15list2AA8ListNodeCSgAI_AItF",
          "mangledName": "$s13testcaculater8SolutionC13mergetowlists5list15list2AA8ListNodeCSgAI_AItF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "generateParenthesis",
          "printedName": "generateParenthesis(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)generateParenthesis:",
          "mangledName": "$s13testcaculater8SolutionC19generateParenthesisySaySSGSiF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "generateall",
          "printedName": "generateall(n:current:result:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11generateall1n7current6resultySi_SSSaySSGztF",
          "mangledName": "$s13testcaculater8SolutionC11generateall1n7current6resultySi_SSSaySSGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "test",
          "printedName": "test(a:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)testWithA:",
          "mangledName": "$s13testcaculater8SolutionC4test1aS2i_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "valid",
          "printedName": "valid(s:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)validWithS:",
          "mangledName": "$s13testcaculater8SolutionC5valid1sSbSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "testmergeKlists",
          "printedName": "testmergeKlists()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)testmergeKlists",
          "mangledName": "$s13testcaculater8SolutionC15testmergeKlistsyyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "mergeKLists",
          "printedName": "mergeKLists(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[testcaculater.ListNode?]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.ListNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ListNode",
                      "printedName": "testcaculater.ListNode",
                      "usr": "s:13testcaculater8ListNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11mergeKListsyAA8ListNodeCSgSayAGGF",
          "mangledName": "$s13testcaculater8SolutionC11mergeKListsyAA8ListNodeCSgSayAGGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "swappairstest",
          "printedName": "swappairstest()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13swappairstestAA8ListNodeCyF",
          "mangledName": "$s13testcaculater8SolutionC13swappairstestAA8ListNodeCyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "swappairs",
          "printedName": "swappairs(head:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC9swappairs4headAA8ListNodeCSgAH_tF",
          "mangledName": "$s13testcaculater8SolutionC9swappairs4headAA8ListNodeCSgAH_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverseKGrouptest",
          "printedName": "reverseKGrouptest()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)reverseKGrouptest",
          "mangledName": "$s13testcaculater8SolutionC17reverseKGrouptestyyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverseKGroup",
          "printedName": "reverseKGroup(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13reverseKGroupyAA8ListNodeCSgAG_SitF",
          "mangledName": "$s13testcaculater8SolutionC13reverseKGroupyAA8ListNodeCSgAG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverseKGroupliu",
          "printedName": "reverseKGroupliu(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC16reverseKGroupliuyAA8ListNodeCSgAG_SitF",
          "mangledName": "$s13testcaculater8SolutionC16reverseKGroupliuyAA8ListNodeCSgAG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "ReverseList",
          "printedName": "ReverseList(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11ReverseListyAA0D4NodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC11ReverseListyAA0D4NodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverselist1",
          "printedName": "reverselist1(head:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC12reverselist14headAA8ListNodeCSgAH_tF",
          "mangledName": "$s13testcaculater8SolutionC12reverselist14headAA8ListNodeCSgAH_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reverseBetween",
          "printedName": "reverseBetween(_:_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC14reverseBetweenyAA8ListNodeCSgAG_S2itF",
          "mangledName": "$s13testcaculater8SolutionC14reverseBetweenyAA8ListNodeCSgAG_S2itF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "getnodelength",
          "printedName": "getnodelength(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13getnodelengthySiAA8ListNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC13getnodelengthySiAA8ListNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "swapairslist",
          "printedName": "swapairslist(head:k:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC12swapairslist4head1kAA8ListNodeCAHSg_SitF",
          "mangledName": "$s13testcaculater8SolutionC12swapairslist4head1kAA8ListNodeCAHSg_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeDuplicatestest",
          "printedName": "removeDuplicatestest()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)removeDuplicatestest",
          "mangledName": "$s13testcaculater8SolutionC20removeDuplicatestestSiyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeDuplicates",
          "printedName": "removeDuplicates(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC16removeDuplicatesySiSaySiGzF",
          "mangledName": "$s13testcaculater8SolutionC16removeDuplicatesySiSaySiGzF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "Merge",
          "printedName": "Merge(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC5MergeyAA8ListNodeCSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC5MergeyAA8ListNodeCSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeElement",
          "printedName": "removeElement(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13removeElementySiSaySiGz_SitF",
          "mangledName": "$s13testcaculater8SolutionC13removeElementySiSaySiGz_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "strStr",
          "printedName": "strStr(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)strStr::",
          "mangledName": "$s13testcaculater8SolutionC6strStrySiSS_SStF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "test",
          "printedName": "test()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)test",
          "mangledName": "$s13testcaculater8SolutionC4testyyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "FindKthToTail",
          "printedName": "FindKthToTail(pHead:k:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13FindKthToTail5pHead1kAA8ListNodeCSgAH_SitF",
          "mangledName": "$s13testcaculater8SolutionC13FindKthToTail5pHead1kAA8ListNodeCSgAH_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeNthFromEndliu",
          "printedName": "removeNthFromEndliu(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC19removeNthFromEndliuyAA8ListNodeCSgAG_SitF",
          "mangledName": "$s13testcaculater8SolutionC19removeNthFromEndliuyAA8ListNodeCSgAG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "FindFirstCommonNode",
          "printedName": "FindFirstCommonNode(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC19FindFirstCommonNodeyAA04ListF0CSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC19FindFirstCommonNodeyAA04ListF0CSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "addInList",
          "printedName": "addInList(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC9addInListyAA0E4NodeCSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC9addInListyAA0E4NodeCSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reversehead",
          "printedName": "reversehead(head:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11reversehead4headAA8ListNodeCSgAH_tF",
          "mangledName": "$s13testcaculater8SolutionC11reversehead4headAA8ListNodeCSgAH_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "sortInList",
          "printedName": "sortInList(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10sortInListyAA0E4NodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC10sortInListyAA0E4NodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "swopNode",
          "printedName": "swopNode(pre:left:right:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC8swopNode3pre4left5rightyAA04ListD0CSg_AJzAJztF",
          "mangledName": "$s13testcaculater8SolutionC8swopNode3pre4left5rightyAA04ListD0CSg_AJzAJztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isPail",
          "printedName": "isPail(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC6isPailySbAA8ListNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC6isPailySbAA8ListNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reversetest1",
          "printedName": "reversetest1(list:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC12reversetest14listAA8ListNodeCSgAH_tF",
          "mangledName": "$s13testcaculater8SolutionC12reversetest14listAA8ListNodeCSgAH_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "oddEvenList",
          "printedName": "oddEvenList(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11oddEvenListyAA0E4NodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC11oddEvenListyAA0E4NodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "deleteDuplicates",
          "printedName": "deleteDuplicates(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC16deleteDuplicatesyAA8ListNodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC16deleteDuplicatesyAA8ListNodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "deleteDuplicates2",
          "printedName": "deleteDuplicates2(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC17deleteDuplicates2yAA8ListNodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC17deleteDuplicates2yAA8ListNodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "search",
          "printedName": "search(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)search::",
          "mangledName": "$s13testcaculater8SolutionC6searchySiSaySiG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "Find",
          "printedName": "Find(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)Find::",
          "mangledName": "$s13testcaculater8SolutionC4FindySbSi_SaySaySiGGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "findPeakElement",
          "printedName": "findPeakElement(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)findPeakElement:",
          "mangledName": "$s13testcaculater8SolutionC15findPeakElementySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "InversePairs",
          "printedName": "InversePairs(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)InversePairs:",
          "mangledName": "$s13testcaculater8SolutionC12InversePairsySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "minNumberInRotateArray",
          "printedName": "minNumberInRotateArray(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)minNumberInRotateArray:",
          "mangledName": "$s13testcaculater8SolutionC22minNumberInRotateArrayySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "compare",
          "printedName": "compare(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)compare::",
          "mangledName": "$s13testcaculater8SolutionC7compareySiSS_SStF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "preorderTraversal",
          "printedName": "preorderTraversal(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC17preorderTraversalySaySaySiGGAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC17preorderTraversalySaySaySiGGAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "levelOrder",
          "printedName": "levelOrder(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10levelOrderySaySaySiGGAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC10levelOrderySaySaySiGGAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "recursive",
          "printedName": "recursive(node:list:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC9recursive4node4listyAA8TreeNodeCSg_SaySaySiGGztF",
          "mangledName": "$s13testcaculater8SolutionC9recursive4node4listyAA8TreeNodeCSg_SaySaySiGGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "levelOrder2",
          "printedName": "levelOrder2(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11levelOrder2ySaySaySiGGAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC11levelOrder2ySaySaySiGGAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "preOrder",
          "printedName": "preOrder(node:list:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC8preOrder4node4listyAA8TreeNodeCSg_SaySiGztF",
          "mangledName": "$s13testcaculater8SolutionC8preOrder4node4listyAA8TreeNodeCSg_SaySiGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxDepth",
          "printedName": "maxDepth(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC8maxDepthySiAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC8maxDepthySiAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "getTreeNode",
          "printedName": "getTreeNode()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "TreeNode",
              "printedName": "testcaculater.TreeNode",
              "usr": "s:13testcaculater8TreeNodeC"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11getTreeNodeAA0dE0CyF",
          "mangledName": "$s13testcaculater8SolutionC11getTreeNodeAA0dE0CyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "hasPathSum",
          "printedName": "hasPathSum(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10hasPathSumySbAA8TreeNodeCSg_SitF",
          "mangledName": "$s13testcaculater8SolutionC10hasPathSumySbAA8TreeNodeCSg_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isSymmetrical",
          "printedName": "isSymmetrical(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC13isSymmetricalySbAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC13isSymmetricalySbAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxDepth1",
          "printedName": "maxDepth1(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC9maxDepth1ySiAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC9maxDepth1ySiAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "mergeTrees",
          "printedName": "mergeTrees(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10mergeTreesyAA8TreeNodeCSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC10mergeTreesyAA8TreeNodeCSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "Mirror",
          "printedName": "Mirror(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC6MirroryAA8TreeNodeCSgAGF",
          "mangledName": "$s13testcaculater8SolutionC6MirroryAA8TreeNodeCSgAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isValidBST",
          "printedName": "isValidBST(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10isValidBSTySbAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC10isValidBSTySbAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isCompleteTree",
          "printedName": "isCompleteTree(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC14isCompleteTreeySbAA0E4NodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC14isCompleteTreeySbAA0E4NodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "IsBalanced_Solution",
          "printedName": "IsBalanced_Solution(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC011IsBalanced_B0ySbAA8TreeNodeCSgF",
          "mangledName": "$s13testcaculater8SolutionC011IsBalanced_B0ySbAA8TreeNodeCSgF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "deep",
          "printedName": "deep(node:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC4deep4nodeSiAA8TreeNodeCSg_tF",
          "mangledName": "$s13testcaculater8SolutionC4deep4nodeSiAA8TreeNodeCSg_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "lowestCommonAncestor",
          "printedName": "lowestCommonAncestor(_:_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC20lowestCommonAncestorySiAA8TreeNodeCSg_S2itF",
          "mangledName": "$s13testcaculater8SolutionC20lowestCommonAncestorySiAA8TreeNodeCSg_S2itF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "lowestCommonAncestor1",
          "printedName": "lowestCommonAncestor1(_:_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC21lowestCommonAncestor1ySiAA8TreeNodeCSg_S2itF",
          "mangledName": "$s13testcaculater8SolutionC21lowestCommonAncestor1ySiAA8TreeNodeCSg_S2itF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "reConstructBinaryTree",
          "printedName": "reConstructBinaryTree(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC21reConstructBinaryTreeyAA0F4NodeCSgSaySiG_AHtF",
          "mangledName": "$s13testcaculater8SolutionC21reConstructBinaryTreeyAA0F4NodeCSgSaySiG_AHtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "permute",
          "printedName": "permute(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)permute:",
          "mangledName": "$s13testcaculater8SolutionC7permuteySaySaySiGGAEF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "permutedfs",
          "printedName": "permutedfs(list:nums:path:used:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Bool]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Bool",
                  "printedName": "Swift.Bool",
                  "usr": "s:Sb"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10permutedfs4list4nums4path4usedySaySaySiGGz_AIzAIzSaySbGztF",
          "mangledName": "$s13testcaculater8SolutionC10permutedfs4list4nums4path4usedySaySaySiGGz_AIzAIzSaySbGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxInWindows",
          "printedName": "maxInWindows(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)maxInWindows::",
          "mangledName": "$s13testcaculater8SolutionC12maxInWindowsySaySiGAE_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "GetLeastNumbers_Solution",
          "printedName": "GetLeastNumbers_Solution(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)GetLeastNumbers_Solution::",
          "mangledName": "$s13testcaculater8SolutionC016GetLeastNumbers_B0ySaySiGAE_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "dic",
          "printedName": "dic",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Dictionary",
              "printedName": "[Swift.Character : Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:SD"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8SolutionC3dicSDySJSiGvp",
          "mangledName": "$s13testcaculater8SolutionC3dicSDySJSiGvp",
          "moduleName": "testcaculater",
          "declAttributes": [
            "HasInitialValue",
            "Final",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "isLet": true,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Dictionary",
                  "printedName": "[Swift.Character : Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Character",
                      "printedName": "Swift.Character",
                      "usr": "s:SJ"
                    },
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:SD"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8SolutionC3dicSDySJSiGvg",
              "mangledName": "$s13testcaculater8SolutionC3dicSDySJSiGvg",
              "moduleName": "testcaculater",
              "implicit": true,
              "declAttributes": [
                "Final"
              ],
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "solve",
          "printedName": "solve(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)solve:",
          "mangledName": "$s13testcaculater8SolutionC5solveySiSSF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isNumber",
          "printedName": "isNumber(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "Character",
              "printedName": "Swift.Character",
              "usr": "s:SJ"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC8isNumberySbSJF",
          "mangledName": "$s13testcaculater8SolutionC8isNumberySbSJF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "cal",
          "printedName": "cal(num:ops:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Character]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC3cal3num3opsySaySiGz_SaySJGztF",
          "mangledName": "$s13testcaculater8SolutionC3cal3num3opsySaySiGz_SaySJGztF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "caculate",
          "printedName": "caculate(arr:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)caculateWithArr:",
          "mangledName": "$s13testcaculater8SolutionC8caculate3arrSiSaySSG_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "twoSum",
          "printedName": "twoSum(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)twoSum::",
          "mangledName": "$s13testcaculater8SolutionC6twoSumySaySiGAE_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "MoreThanHalfNum_Solution",
          "printedName": "MoreThanHalfNum_Solution(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)MoreThanHalfNum_Solution:",
          "mangledName": "$s13testcaculater8SolutionC016MoreThanHalfNum_B0ySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "FindNumsAppearOnce",
          "printedName": "FindNumsAppearOnce(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)FindNumsAppearOnce:",
          "mangledName": "$s13testcaculater8SolutionC18FindNumsAppearOnceySaySiGAEF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "minNumberDisappeared",
          "printedName": "minNumberDisappeared(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)minNumberDisappeared:",
          "mangledName": "$s13testcaculater8SolutionC20minNumberDisappearedySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "threeSum1",
          "printedName": "threeSum1(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[[Swift.Int]]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Array",
                  "printedName": "[Swift.Int]",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sa"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)threeSum1:",
          "mangledName": "$s13testcaculater8SolutionC9threeSum1ySaySaySiGGAEF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "trans",
          "printedName": "trans(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)trans::",
          "mangledName": "$s13testcaculater8SolutionC5transyS2S_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "longestCommonPrefix1",
          "printedName": "longestCommonPrefix1(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.String]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)longestCommonPrefix1:",
          "mangledName": "$s13testcaculater8SolutionC20longestCommonPrefix1ySSSaySSGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "solveIp",
          "printedName": "solveIp(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)solveIp:",
          "mangledName": "$s13testcaculater8SolutionC7solveIpyS2SF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isIP4",
          "printedName": "isIP4(str:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)isIP4WithStr:",
          "mangledName": "$s13testcaculater8SolutionC5isIP43strSbSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "isIP6",
          "printedName": "isIP6(str:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)isIP6WithStr:",
          "mangledName": "$s13testcaculater8SolutionC5isIP63strSbSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "solveSum",
          "printedName": "solveSum(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)solveSum::",
          "mangledName": "$s13testcaculater8SolutionC8solveSumyS2S_SStF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "merge",
          "printedName": "merge(_:_:_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC5mergeyySaySiGz_SiAESitF",
          "mangledName": "$s13testcaculater8SolutionC5mergeyySaySiGz_SiAESitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "judge",
          "printedName": "judge(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)judge:",
          "mangledName": "$s13testcaculater8SolutionC5judgeySbSSF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "merge",
          "printedName": "merge(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[testcaculater.Interval]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Interval",
                  "printedName": "testcaculater.Interval",
                  "usr": "s:13testcaculater8IntervalC"
                }
              ],
              "usr": "s:Sa"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[testcaculater.Interval]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Interval",
                  "printedName": "testcaculater.Interval",
                  "usr": "s:13testcaculater8IntervalC"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC5mergeySayAA8IntervalCGAGF",
          "mangledName": "$s13testcaculater8SolutionC5mergeySayAA8IntervalCGAGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "minWindow",
          "printedName": "minWindow(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)minWindow::",
          "mangledName": "$s13testcaculater8SolutionC9minWindowyS2S_SStF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "solveStr",
          "printedName": "solveStr(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)solveStr:",
          "mangledName": "$s13testcaculater8SolutionC8solveStryS2SF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxLength",
          "printedName": "maxLength(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)maxLength:",
          "mangledName": "$s13testcaculater8SolutionC9maxLengthySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "maxWater",
          "printedName": "maxWater(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int64",
              "printedName": "Swift.Int64",
              "usr": "s:s5Int64V"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)maxWater:",
          "mangledName": "$s13testcaculater8SolutionC8maxWaterys5Int64VSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "jumpFloor",
          "printedName": "jumpFloor(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)jumpFloor:",
          "mangledName": "$s13testcaculater8SolutionC9jumpFlooryS2iF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "minCostClimbingStairs",
          "printedName": "minCostClimbingStairs(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)minCostClimbingStairs:",
          "mangledName": "$s13testcaculater8SolutionC21minCostClimbingStairsySiSaySiGF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "choiceSort",
          "printedName": "choiceSort(list:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Array",
              "printedName": "[Swift.Int]",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "paramValueOwnership": "InOut",
              "usr": "s:Sa"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC10choiceSort4listySaySiGz_tF",
          "mangledName": "$s13testcaculater8SolutionC10choiceSort4listySaySiGz_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "firstCharacterCountSingle",
          "printedName": "firstCharacterCountSingle(s:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)firstCharacterCountSingleWithS:",
          "mangledName": "$s13testcaculater8SolutionC25firstCharacterCountSingle1sSiSS_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "findZhiShu",
          "printedName": "findZhiShu()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            }
          ],
          "declKind": "Func",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)findZhiShu",
          "mangledName": "$s13testcaculater8SolutionC10findZhiShuSbyF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "ObjC"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "mergeTrees2",
          "printedName": "mergeTrees2(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11mergeTrees2yAA8TreeNodeCSgAG_AGtF",
          "mangledName": "$s13testcaculater8SolutionC11mergeTrees2yAA8TreeNodeCSgAG_AGtF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "removeNthFromEnd1",
          "printedName": "removeNthFromEnd1(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC17removeNthFromEnd1yAA8ListNodeCSgAG_SitF",
          "mangledName": "$s13testcaculater8SolutionC17removeNthFromEnd1yAA8ListNodeCSgAG_SitF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Function",
          "name": "getNodeList",
          "printedName": "getNodeList(node:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8SolutionC11getNodeList4nodeyAA0eD0CSg_tF",
          "mangledName": "$s13testcaculater8SolutionC11getNodeList4nodeyAA0eD0CSg_tF",
          "moduleName": "testcaculater",
          "isOpen": true,
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Solution",
              "printedName": "testcaculater.Solution",
              "usr": "c:@M@testcaculater@objc(cs)Solution"
            }
          ],
          "declKind": "Constructor",
          "usr": "c:@M@testcaculater@objc(cs)Solution(im)init",
          "mangledName": "$s13testcaculater8SolutionCACycfc",
          "moduleName": "testcaculater",
          "overriding": true,
          "implicit": true,
          "objc_name": "init",
          "declAttributes": [
            "Dynamic",
            "ObjC",
            "Override"
          ],
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "c:@M@testcaculater@objc(cs)Solution",
      "mangledName": "$s13testcaculater8SolutionC",
      "moduleName": "testcaculater",
      "isOpen": true,
      "declAttributes": [
        "ObjCMembers",
        "ObjC"
      ],
      "superclassUsr": "c:objc(cs)NSObject",
      "inheritsConvenienceInitializers": true,
      "superclassNames": [
        "ObjectiveC.NSObject"
      ],
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObservingPublishing",
          "printedName": "_KeyValueCodingAndObservingPublishing",
          "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
          "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
        },
        {
          "kind": "Conformance",
          "name": "_KeyValueCodingAndObserving",
          "printedName": "_KeyValueCodingAndObserving",
          "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
          "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Interval",
      "printedName": "Interval",
      "children": [
        {
          "kind": "Var",
          "name": "start",
          "printedName": "start",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8IntervalC5startSivp",
          "mangledName": "$s13testcaculater8IntervalC5startSivp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC5startSivg",
              "mangledName": "$s13testcaculater8IntervalC5startSivg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC5startSivs",
              "mangledName": "$s13testcaculater8IntervalC5startSivs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC5startSivM",
              "mangledName": "$s13testcaculater8IntervalC5startSivM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "end",
          "printedName": "end",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8IntervalC3endSivp",
          "mangledName": "$s13testcaculater8IntervalC3endSivp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC3endSivg",
              "mangledName": "$s13testcaculater8IntervalC3endSivg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC3endSivs",
              "mangledName": "$s13testcaculater8IntervalC3endSivs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8IntervalC3endSivM",
              "mangledName": "$s13testcaculater8IntervalC3endSivM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Interval",
              "printedName": "testcaculater.Interval",
              "usr": "s:13testcaculater8IntervalC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "hasDefaultArg": true,
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "hasDefaultArg": true,
              "usr": "s:Si"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:13testcaculater8IntervalCyACSi_Sitcfc",
          "mangledName": "$s13testcaculater8IntervalCyACSi_Sitcfc",
          "moduleName": "testcaculater",
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "s:13testcaculater8IntervalC",
      "mangledName": "$s13testcaculater8IntervalC",
      "moduleName": "testcaculater",
      "isOpen": true
    },
    {
      "kind": "TypeDecl",
      "name": "ListNode",
      "printedName": "ListNode",
      "children": [
        {
          "kind": "Var",
          "name": "val",
          "printedName": "val",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8ListNodeC3valSivp",
          "mangledName": "$s13testcaculater8ListNodeC3valSivp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC3valSivg",
              "mangledName": "$s13testcaculater8ListNodeC3valSivg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC3valSivs",
              "mangledName": "$s13testcaculater8ListNodeC3valSivs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC3valSivM",
              "mangledName": "$s13testcaculater8ListNodeC3valSivM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "next",
          "printedName": "next",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8ListNodeC4nextACSgvp",
          "mangledName": "$s13testcaculater8ListNodeC4nextACSgvp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.ListNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ListNode",
                      "printedName": "testcaculater.ListNode",
                      "usr": "s:13testcaculater8ListNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC4nextACSgvg",
              "mangledName": "$s13testcaculater8ListNodeC4nextACSgvg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.ListNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ListNode",
                      "printedName": "testcaculater.ListNode",
                      "usr": "s:13testcaculater8ListNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC4nextACSgvs",
              "mangledName": "$s13testcaculater8ListNodeC4nextACSgvs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8ListNodeC4nextACSgvM",
              "mangledName": "$s13testcaculater8ListNodeC4nextACSgvM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init()",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:13testcaculater8ListNodeCACycfc",
          "mangledName": "$s13testcaculater8ListNodeCACycfc",
          "moduleName": "testcaculater",
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:13testcaculater8ListNodeCyACSicfc",
          "mangledName": "$s13testcaculater8ListNodeCyACSicfc",
          "moduleName": "testcaculater",
          "init_kind": "Designated"
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "ListNode",
              "printedName": "testcaculater.ListNode",
              "usr": "s:13testcaculater8ListNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.ListNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ListNode",
                  "printedName": "testcaculater.ListNode",
                  "usr": "s:13testcaculater8ListNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:13testcaculater8ListNodeCyACSi_ACSgtcfc",
          "mangledName": "$s13testcaculater8ListNodeCyACSi_ACSgtcfc",
          "moduleName": "testcaculater",
          "init_kind": "Designated"
        }
      ],
      "declKind": "Class",
      "usr": "s:13testcaculater8ListNodeC",
      "mangledName": "$s13testcaculater8ListNodeC",
      "moduleName": "testcaculater",
      "isOpen": true
    },
    {
      "kind": "TypeDecl",
      "name": "TreeNode",
      "printedName": "TreeNode",
      "children": [
        {
          "kind": "Var",
          "name": "val",
          "printedName": "val",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8TreeNodeC3valSivp",
          "mangledName": "$s13testcaculater8TreeNodeC3valSivp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasStorage"
          ],
          "fixedbinaryorder": 0,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC3valSivg",
              "mangledName": "$s13testcaculater8TreeNodeC3valSivg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC3valSivs",
              "mangledName": "$s13testcaculater8TreeNodeC3valSivs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC3valSivM",
              "mangledName": "$s13testcaculater8TreeNodeC3valSivM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "left",
          "printedName": "left",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8TreeNodeC4leftACSgvp",
          "mangledName": "$s13testcaculater8TreeNodeC4leftACSgvp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage"
          ],
          "fixedbinaryorder": 1,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.TreeNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "TreeNode",
                      "printedName": "testcaculater.TreeNode",
                      "usr": "s:13testcaculater8TreeNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC4leftACSgvg",
              "mangledName": "$s13testcaculater8TreeNodeC4leftACSgvg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.TreeNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "TreeNode",
                      "printedName": "testcaculater.TreeNode",
                      "usr": "s:13testcaculater8TreeNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC4leftACSgvs",
              "mangledName": "$s13testcaculater8TreeNodeC4leftACSgvs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC4leftACSgvM",
              "mangledName": "$s13testcaculater8TreeNodeC4leftACSgvM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Var",
          "name": "right",
          "printedName": "right",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "usr": "s:Sq"
            }
          ],
          "declKind": "Var",
          "usr": "s:13testcaculater8TreeNodeC5rightACSgvp",
          "mangledName": "$s13testcaculater8TreeNodeC5rightACSgvp",
          "moduleName": "testcaculater",
          "isOpen": true,
          "declAttributes": [
            "HasInitialValue",
            "HasStorage"
          ],
          "fixedbinaryorder": 2,
          "hasStorage": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.TreeNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "TreeNode",
                      "printedName": "testcaculater.TreeNode",
                      "usr": "s:13testcaculater8TreeNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC5rightACSgvg",
              "mangledName": "$s13testcaculater8TreeNodeC5rightACSgvg",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "get"
            },
            {
              "kind": "Accessor",
              "name": "Set",
              "printedName": "Set()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Optional",
                  "printedName": "testcaculater.TreeNode?",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "TreeNode",
                      "printedName": "testcaculater.TreeNode",
                      "usr": "s:13testcaculater8TreeNodeC"
                    }
                  ],
                  "usr": "s:Sq"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC5rightACSgvs",
              "mangledName": "$s13testcaculater8TreeNodeC5rightACSgvs",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "set"
            },
            {
              "kind": "Accessor",
              "name": "Modify",
              "printedName": "Modify()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Void",
                  "printedName": "()"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:13testcaculater8TreeNodeC5rightACSgvM",
              "mangledName": "$s13testcaculater8TreeNodeC5rightACSgvM",
              "moduleName": "testcaculater",
              "implicit": true,
              "isOpen": true,
              "declAttributes": [
                "Transparent"
              ],
              "accessorKind": "_modify"
            }
          ]
        },
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(_:_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "TreeNode",
              "printedName": "testcaculater.TreeNode",
              "usr": "s:13testcaculater8TreeNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "hasDefaultArg": true,
              "usr": "s:Si"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "testcaculater.TreeNode?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "TreeNode",
                  "printedName": "testcaculater.TreeNode",
                  "usr": "s:13testcaculater8TreeNodeC"
                }
              ],
              "hasDefaultArg": true,
              "usr": "s:Sq"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:13testcaculater8TreeNodeCyACSi_ACSgADtcfc",
          "mangledName": "$s13testcaculater8TreeNodeCyACSi_ACSgADtcfc",
          "moduleName": "testcaculater",
          "init_kind": "Designated"
        },
        {
          "kind": "Function",
          "name": "==",
          "printedName": "==(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "TreeNode",
              "printedName": "testcaculater.TreeNode",
              "usr": "s:13testcaculater8TreeNodeC"
            },
            {
              "kind": "TypeNominal",
              "name": "TreeNode",
              "printedName": "testcaculater.TreeNode",
              "usr": "s:13testcaculater8TreeNodeC"
            }
          ],
          "declKind": "Func",
          "usr": "s:13testcaculater8TreeNodeC2eeoiySbAC_ACtFZ",
          "mangledName": "$s13testcaculater8TreeNodeC2eeoiySbAC_ACtFZ",
          "moduleName": "testcaculater",
          "static": true,
          "declAttributes": [
            "Final"
          ],
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Class",
      "usr": "s:13testcaculater8TreeNodeC",
      "mangledName": "$s13testcaculater8TreeNodeC",
      "moduleName": "testcaculater",
      "isOpen": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "String",
      "printedName": "String",
      "children": [
        {
          "kind": "Function",
          "name": "characteratindex",
          "printedName": "characteratindex(index:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Optional",
              "printedName": "Swift.Character?",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ],
              "usr": "s:Sq"
            },
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Func",
          "usr": "s:SS13testcaculaterE16characteratindex5indexSJSgSi_tF",
          "mangledName": "$sSS13testcaculaterE16characteratindex5indexSJSgSi_tF",
          "moduleName": "testcaculater",
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Struct",
      "usr": "s:SS",
      "mangledName": "$sSS",
      "moduleName": "Swift",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        },
        {
          "kind": "Conformance",
          "name": "_HasContiguousBytes",
          "printedName": "_HasContiguousBytes",
          "usr": "s:s19_HasContiguousBytesP",
          "mangledName": "$ss19_HasContiguousBytesP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_CustomPlaygroundQuickLookable",
          "printedName": "_CustomPlaygroundQuickLookable",
          "usr": "s:s30_CustomPlaygroundQuickLookableP",
          "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStream",
          "printedName": "TextOutputStream",
          "usr": "s:s16TextOutputStreamP",
          "mangledName": "$ss16TextOutputStreamP"
        },
        {
          "kind": "Conformance",
          "name": "TextOutputStreamable",
          "printedName": "TextOutputStreamable",
          "usr": "s:s20TextOutputStreamableP",
          "mangledName": "$ss20TextOutputStreamableP"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinUnicodeScalarLiteral",
          "printedName": "_ExpressibleByBuiltinUnicodeScalarLiteral",
          "usr": "s:s41_ExpressibleByBuiltinUnicodeScalarLiteralP",
          "mangledName": "$ss41_ExpressibleByBuiltinUnicodeScalarLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
          "printedName": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
          "usr": "s:s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP",
          "mangledName": "$ss51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "_ExpressibleByBuiltinStringLiteral",
          "printedName": "_ExpressibleByBuiltinStringLiteral",
          "usr": "s:s34_ExpressibleByBuiltinStringLiteralP",
          "mangledName": "$ss34_ExpressibleByBuiltinStringLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByStringLiteral",
          "printedName": "ExpressibleByStringLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "StringLiteralType",
              "printedName": "StringLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s26ExpressibleByStringLiteralP",
          "mangledName": "$ss26ExpressibleByStringLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByExtendedGraphemeClusterLiteral",
          "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ExtendedGraphemeClusterLiteralType",
              "printedName": "ExtendedGraphemeClusterLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
          "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByUnicodeScalarLiteral",
          "printedName": "ExpressibleByUnicodeScalarLiteral",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "UnicodeScalarLiteralType",
              "printedName": "UnicodeScalarLiteralType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ]
            }
          ],
          "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
          "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Index",
                  "printedName": "Swift.String.Index",
                  "usr": "s:SS5IndexV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultIndices",
                  "printedName": "Swift.DefaultIndices<Swift.String>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:SI"
                }
              ]
            }
          ],
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Index",
                  "printedName": "Swift.String.Index",
                  "usr": "s:SS5IndexV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Swift.String.Iterator",
                  "usr": "s:SS8IteratorV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultIndices",
                  "printedName": "Swift.DefaultIndices<Swift.String>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "String",
                      "printedName": "Swift.String",
                      "usr": "s:SS"
                    }
                  ],
                  "usr": "s:SI"
                }
              ]
            }
          ],
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Character",
                  "printedName": "Swift.Character",
                  "usr": "s:SJ"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Swift.String.Iterator",
                  "usr": "s:SS8IteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Comparable",
          "printedName": "Comparable",
          "usr": "s:SL",
          "mangledName": "$sSL"
        },
        {
          "kind": "Conformance",
          "name": "StringProtocol",
          "printedName": "StringProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "UTF8View",
              "printedName": "UTF8View",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UTF8View",
                  "printedName": "Swift.String.UTF8View",
                  "usr": "s:SS8UTF8ViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "UTF16View",
              "printedName": "UTF16View",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UTF16View",
                  "printedName": "Swift.String.UTF16View",
                  "usr": "s:SS9UTF16ViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "UnicodeScalarView",
              "printedName": "UnicodeScalarView",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UnicodeScalarView",
                  "printedName": "Swift.String.UnicodeScalarView",
                  "usr": "s:SS17UnicodeScalarViewV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            }
          ],
          "usr": "s:Sy",
          "mangledName": "$sSy"
        },
        {
          "kind": "Conformance",
          "name": "ExpressibleByStringInterpolation",
          "printedName": "ExpressibleByStringInterpolation",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "StringInterpolation",
              "printedName": "StringInterpolation",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "DefaultStringInterpolation",
                  "printedName": "Swift.DefaultStringInterpolation",
                  "usr": "s:s26DefaultStringInterpolationV"
                }
              ]
            }
          ],
          "usr": "s:s32ExpressibleByStringInterpolationP",
          "mangledName": "$ss32ExpressibleByStringInterpolationP"
        },
        {
          "kind": "Conformance",
          "name": "LosslessStringConvertible",
          "printedName": "LosslessStringConvertible",
          "usr": "s:s25LosslessStringConvertibleP",
          "mangledName": "$ss25LosslessStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Substring",
                  "printedName": "Swift.Substring",
                  "usr": "s:Ss"
                }
              ]
            }
          ],
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "MirrorPath",
          "printedName": "MirrorPath",
          "usr": "s:s10MirrorPathP",
          "mangledName": "$ss10MirrorPathP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSString",
                  "printedName": "Foundation.NSString",
                  "usr": "c:objc(cs)NSString"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "CVarArg",
          "printedName": "CVarArg",
          "usr": "s:s7CVarArgP",
          "mangledName": "$ss7CVarArgP"
        }
      ]
    }
  ],
  "json_format_version": 6
}